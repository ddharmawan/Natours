@mixin clearFix {
  &:after {
    content: "";
    display: block;
    clear: both;
  }
}

@mixin rowMachine($numPerRow, $margin) {
  width: ((100% - (($numPerRow - 1) * $margin)) / $numPerRow);
  &:nth-child(n) {
    margin-bottom: $margin;
    margin-right: $margin;
  }
  &:nth-child(#{$numPerRow}n) {
    margin-right: 0;
    margin-bottom: 0;
  }
}

@mixin antialiasing {
  outline: 1px solid transparent;
}

@mixin box($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin position($position, $args) {
  @each $o in top right bottom left {
    $i: index($args, $o);
    @if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number
    {
      #{$o}: nth($args, $i + 1);
    }
  }
  position: $position;
}

// Positioning helpers
@mixin absolute($args: "") {
  @include position(absolute, $args);
}

@mixin fixed($args: "") {
  @include position(fixed, $args);
}

@mixin relative($args: "") {
  @include position(relative, $args);
}

@mixin screen($size) {
  $desktop: "(min-width: 1024px)";
  $tablet: "(min-width: 768px) and (max-width: 1023px)";
  $mobile: "(max-width: 767px)";
  @if $size == desktop {
    @media only screen and #{$desktop} {
      @content;
    }
  } @else if $size == tablet {
    @media only screen and #{$tablet} {
      @content;
    }
  } @else if $size == mobile {
    @media only screen and #{$mobile} {
      @content;
    }
  } @else {
    @media only screen and #{$size} {
      @content;
    }
  }
}

@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

@mixin center-vertically {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// main component must have position relative
@mixin overlay($color) {
  &:after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: $color;
  }
}

// main component must have position relative
@mixin overlay-skewed($color-start, $color-end) {
  &:before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: linear-gradient(
      105deg,
      $color-start 0%,
      $color-start 49%,
      $color-end 50%,
      $color-end 100%
    );
  }
}

// media query
// order Base + typography > general layout + grid > page layout > components
// use em for best practice - 1em = 16px
@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (max-width: 600 / 16 * 1em) {
      @content;
    }
  }

  @if $breakpoint == tab-port {
    @media only screen and (max-width: 900 / 16 * 1em) {
      @content;
    }
  }

  @if $breakpoint == tab-land {
    @media only screen and (max-width: 1200 / 16 * 1em) {
      @content;
    }
  }

  @if $breakpoint == big-desktop {
    @media only screen and (max-width: 1800 / 16 * 1em) {
      @content;
    }
  }
}
